# This is a basic workflow to help you get started with Actions

name: publish

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x'
      - name: restore tools
        run: dotnet tool restore
      - name: restore dotnet packages
        run: dotnet paket restore
      - name: restore npm packages
        run: npm install
      - name: Build dotnet
        run: |
            set -e
            dotnet build ./playground/src -c Release
            cp paket.dependencies ./src
            cp paket.lock ./src
      - name: Build JS
        run: |
            set -e
            dotnet fable ./src --outDir .output/
            cp package.json .output/
            touch .output/fable_modules/.npmignore
      - uses: actions/upload-artifact@master
        with:
          name: npm-package
          path: .output/
      - uses: actions/upload-artifact@master
        with:
          name: source
          path: src/
  publish-npm:
    runs-on: ubuntu-latest
    env:
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
    needs: build
    steps:
      - name: Download npm files
        uses: actions/download-artifact@master
        with:
          name: npm-package
          path: .output/
      - name: setup npm config
        run: |
            set -e
            echo "//registry.npmjs.org/:_authToken=${{ secrets.NPMJS_APIKEY }}" > .npmrc
            npm config set scope criipto
            npm version "0.1.$GITHUB_RUN_NUMBER"
        working-directory: .output/
      - name: push to npmjs
        run: npm publish --access public
        working-directory: .output/
  publish-fable:
    runs-on: ubuntu-latest
    env:
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
    needs: build
    steps:
      - name: Download source
        uses: actions/download-artifact@master
        with:
          name: source
          path: src/
      - name: install tools
        run: |
            set -e 
            dotnet tool install -g paket
            dotnet tool install -g aver
        working-directory: ./src
      - name: Pack the package
        run: |
            dllVersion=$(aver bin/Release/net6.0/Criipto.DesignToolBox.React.dll)
            echo "DLL version info: $dllVersion"
            packageVersion=$(echo $dllVersion | grep AssemblyVersion | rev | cut -d' ' -f1 | rev)-alpha
            echo "Package version: $packageVersion"
            paket pack ../package --version "$packageVersion"
        working-directory: ./src
      - name: Push the package
        run: |
           path=$(ls ./package/*.nupkg)
           paket push --api-key ${{ secrets.NUGET_APIKEY }} --ignoreConflicts "$path"
