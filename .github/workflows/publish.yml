# This is a basic workflow to help you get started with Actions

name: publish 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  VERSION: "0.1.${{ github.run_number }}"
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x'
      - name: restore tools
        run: dotnet tool restore
      - name: restore npm packages
        run: npm install
      - name: Build dotnet
        run: |
            set -e
            dotnet build ./playground/src -c Release
      - name: Build JS
        run: |
            set -e
            dotnet fable ./src --outDir .output/
            cp package.json .output/
            touch .output/fable_modules/.npmignore
      - uses: actions/upload-artifact@master
        with:
          name: npm-package
          path: .output/
      - uses: actions/upload-artifact@master
        with:
          name: source
          path: src/
  publish-npm:
    runs-on: ubuntu-latest
    
    needs: build
    steps:
      - name: Download npm files
        uses: actions/download-artifact@master
        with:
          name: npm-package
          path: .output/
      - name: setup npm config
        run: |
            set -e
            echo "//registry.npmjs.org/:_authToken=${{ secrets.NPMJS_APIKEY }}" > .npmrc
            npm config set scope criipto
            npm version "$VERSION"
        working-directory: .output/
      - name: push to npmjs
        run: npm publish --access public
        working-directory: .output/
  publish-fable:
    runs-on: ubuntu-latest
    env:
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
    needs: build
    steps:
      - name: Download source
        uses: actions/download-artifact@master
        with:
          name: source
          path: src/
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x'
      - name: Pack the package
        run: dotnet pack . -c Release -o ../package -p:PackageVersion="$Version"
        working-directory: ./src
      - name: Push the package
        run: |
           dotnet nuget push "./package/*.nupkg" --api-key ${{ secrets.NUGET_APIKEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate